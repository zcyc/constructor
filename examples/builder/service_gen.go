package builder

import "time"

// Code generated by constructor. DO NOT EDIT.

// ServiceBuilder is a builder for Service
type ServiceBuilder struct {
	name       string
	host       string
	port       int
	timeout    time.Duration
	maxRetries int
}

// NewServiceBuilder creates a new ServiceBuilder
func NewServiceBuilder() *ServiceBuilder {
	return &ServiceBuilder{}
}

// WithName sets the name field
func (b *ServiceBuilder) WithName(name string) *ServiceBuilder {
	b.name = name
	return b
}

// WithHost sets the host field
func (b *ServiceBuilder) WithHost(host string) *ServiceBuilder {
	b.host = host
	return b
}

// WithPort sets the port field
func (b *ServiceBuilder) WithPort(port int) *ServiceBuilder {
	b.port = port
	return b
}

// WithTimeout sets the timeout field
func (b *ServiceBuilder) WithTimeout(timeout time.Duration) *ServiceBuilder {
	b.timeout = timeout
	return b
}

// WithMaxRetries sets the maxRetries field
func (b *ServiceBuilder) WithMaxRetries(maxRetries int) *ServiceBuilder {
	b.maxRetries = maxRetries
	return b
}

// Build builds the Service
func (b *ServiceBuilder) Build() *Service {
	v := &Service{
		name:       b.name,
		host:       b.host,
		port:       b.port,
		timeout:    b.timeout,
		maxRetries: b.maxRetries,
	}
	v.initialize()
	return v
}
